Building a Demo API using Postgres, Node, Express

Steps
1. mkdir -p .github/workflows
2. touch .github/workflows/action.yml
3. Define the action
    ln1 is the name of the workflow.
    ln3 specifies the event that should trigger th workflow
    ln5 describes the pipeline or the activities that are executed in the
    as part of this workflow
    ln6 is the name of the job
    ln7 describes the runner that is to be used for the job
    ln8-ln13 -> steps: declaration of the steps to be executed in the job
    name: identifier of the step
    uses: specifies the action to be executed. This can be a command or the
    name of an actions published and shared via the marketplace/community
    with: the arguments to use when running the action defined in "uses"
    repository: the repository to obtain the code from. This is utilized in a case where
    you intend to obtain the code from a separate repository.
    ref: the repository ref to use.
        (To do: Explore other forms of refs that can be used for this.)
    https://github.com/alex-magana/aleem-urls/commit/15d048a7ca651645cc1272df4896ca6f450219f2
5. Push the changes to the remote branch
6. Navigate to the Actions tab and execute the action.
7. Rectify the repository naming
    https://github.com/alex-magana/aleem-urls/commit/66a699ec73d863653e096c427a830bad2f3ab587
8. Install heroku CLI
    brew tap heroku/brew && brew install heroku
9. Log in to heroku
    heroku login
    This creates a .netrc file in ~/
    Run cat ~/.netrc to view the file
10. Obtain the heroku auth token
    heroku auth:token
11. Add the auth token to a secret on Github
    https://github.com/alex-magana/aleem-urls/settings/secrets/actions/new
12. Add a step to generate the .netrc file in the workflow
    https://github.com/alex-magana/aleem-urls/commit/321873a9a5e712b848ac21949caebb3c2b352b78
13. Add the remote config for heroku app
    [link to commit]
14. Add the action to push the branch to heroku
    [link to commit]
15. Navigate to https://aleem-urls-via-github-actions.herokuapp.com
    The response below should be visible on the page
        {
            status: "Online",
            date: "2020-11-17T05:12:37.550Z"
        }
16. Deploy the application using a cron job scheduler
    - The cron schedule format takes the format
    "* * * * *", with the asterisks representing the following from left to right
    * - minutes (0 - 59)
    * - hour (0 - 23)
    * - day of the month (1 - 31)
    * - month (1 - 12 or JAN - DEC)
    * - day of the week (0 - 6 or SUN - SAT)
    - E.g "0 0 * * *" -> This instructs Github Actions to run every day at 00:00 hrs
    - Fractions of a unit can be used to specify the frequency of repetition
    - E.g "0 0 */1 * *" -> Run at 00:00 on every day of the month
        "0 0 */2 * *" -> Run at 00:00 on every 2nd day of the month
        "*/10 * * * *" -> Run at every 10th minute
    https://crontab.guru/#0_0_*_*/1_*
    https://docs.github.com/en/free-pro-team@latest/actions/reference/events-that-trigger-workflows#scheduled-events
    [link to commit]
17. Using a marketplace action
    Replace the "Create .netrc for Heroku Auth" with the following text
    - name: "Create .netrc for Heroku Auth"
        uses: akhileshns/heroku-deploy@v3.5.7 # The action imported from the marketplace
        with: # The flag used to pass arguments to the imported action
          heroku_api_key: ${{secrets.HEROKU_AUTH_TOKEN}} # The auth token generated via "heroku log in"
          heroku_app_name: "aleem-urls-via-github-actions" # The name of the app in heroku
          heroku_email: "gatobumalex@gmail.com" # The email address for the target heroku account
    [link to commit]
18. Specify the workspace directory
    - Use the working-directory key under jobs.<job_id>.steps to specify the
    directory form where the action should be executed
      working-directory: ./temp
    [link to commit]
19. working-directory is not supported for steps that use the "uses" attribute
    Use the appdir documented in https://github.com/AkhileshNS/heroku-deploy#deploy-subdirectory
    [link to commit]
20. Add the path to checkout the application to.
    [link to commit]